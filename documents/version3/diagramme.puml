@startuml

class Main {}

class Labyrinthe {
    - {static} taille : int
    + Labyrinthe()
    + ArrayList<Case> GetCasesLibres()
}
Labyrinthe "1" --> "*" Case : - cases

class Case {
    - x : int
    - y : int
    - couleur : Color
    + Case(int x, int y)
}

class Mur extends Case {}

class Sol extends Case {}

class Personnage {
    - x : Int
    - y : Int
    - {static} LIMIT_X : int
    - {static} LIMIT_Y : int
    + Personnage()
    + void deplacer(Commande c)
    + String toString()
}

class Monstre {
    - x : int
    - y : int
    + Monstre(int x, int y)
}

interface Jeu {
    + void evoluer()
    + boolean etreFini()
}

interface DessinJeu {
    + void dessiner()
}

class JeuPerso implements Jeu {
    + JeuPerso()
    + String toString()
    + void evoluer(Commande commande)
    + boolean etreFini()
    + Personnage getPj()
    + void deplacerMonstres()
    + void genererMonstres(int nbMonstres)
}
JeuPerso "1" --> "1" Labyrinthe : - labyrinthe
JeuPerso "1" --> "1" Personnage : - pj
JeuPerso "1" --> "*" Monstre : - monstres

class DessinPerso implements DessinJeu {
    - {static} int tailleCase
    + DessinPerso(Jeu j)
    + void dessinerObjet(String s, int x, int y, BufferedImage im)
    + void dessiner(BufferedImage im)
}
DessinPerso "1" -> "1" JeuPerso : - jeu

@enduml